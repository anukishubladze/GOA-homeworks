#ფუნქცია რომელსაც გადაეცემა სვეტი და რიგი (row, col) და გამოპრინტავს თითოეული ელემენტის პოზიციას სვეტი-სვეტ , მაგ: ( 2, 2 ) --->  row: 1 col:1, row: 1 col:2, row: 2 col: 1, row:2 col: 2;

def positions(rows, cols):
    for i in range(1, rows + 1):
        for o in range(1, cols + 1): 
            print(f"row: {i} col: {o}") #f სტრინგი გვეხმარება რომ ცვლადები ადვილად შევიტანოთ ცხრილში


positions(2, 2)
#positions(1, 2)
#positions(2,1)

#ფუნქცია რომელიც ქმნის გამრავლების ტაბულას 1-10 და აბრუნებს მათ 2D მასივის ფორმაში ანუ ასეთში:  [  [1,2,3...],  [2,4,6...],  [3,6...]...  ]

def multiplicaton_table():
    for i in range(1,10):
        list=[] #სია რიგებისთვის
        for l in range(1,10):
            list.append(list) #append ამატებს მონაცემს ცხრილის ბოლოში
            mult_table.append(list)
        return mult_table
    

# ფუნქცია რომელსაც გადაეცემა რიცხვი და გამოპრინტავს ყველა იმ რიცხვის მაგალითს სადაც მეორე რიცხვი მეტია პირველზე, ანუ თუ გადავეცით რიცხვი სამი, ყველა წყვილი იქნებოდა: (1,1) (1,2) (1,3) (2,1) (2,2) (2,3) (3,1) (3,2) (3,3) ----> აქედან უუნდა გამოვიტანოთ მხოლოდ (1,2), (2,3), (1,3)

def number(7):
    for i in range(7, 7+1):
        for a in range(7, 7+1):
            list.append('i,a')

